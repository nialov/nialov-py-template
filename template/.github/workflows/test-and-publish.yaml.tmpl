name: test-and-publish

on:
  # run on all pushes to any branch
  push:
  # run only on master pull requests
  pull_request:
    branches: [master]
  # also run periodically
  schedule:
    - cron: "41 7 * * 5"

jobs:
  pytest-coverage:
    name: Test and check coverage of 🐍 code
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Test with invoke -> nox -> pytest
        run: invoke ci-test --python ${{ matrix.python-version }}

  format-lint:
    runs-on: ubuntu-latest
    name: Format and lint 🐍 code
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Lint with invoke -> nox -> linters
        run: invoke format-and-lint

  docs:
    runs-on: ubuntu-latest
    name: Build documentation
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies including pandoc 🐼
        run: |
          sudo apt install pandoc
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Build docs with invoke -> nox session
        run: invoke docs

  citation:
    runs-on: ubuntu-latest
    name: Build citation and validate it
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Build docs with invoke -> nox session
        run: invoke citation
    

  build-and-publish:
    runs-on: ubuntu-latest
    # Requires that unit tests pass but doesn't require lints
    needs: [pytest-coverage]
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    # Pushes to PyPI on tagged commit pushes of master branch
    # Additionally tests building with setuptools on all branches
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install invoke and nox
        run: >-
          python -m pip install invoke nox
      - name: Build binary wheel and a source tarball
        run: >-
          invoke build
      - name: Publish distribution 📦 to PyPI on tagged commit pushes
        # Publish to PyPI on tagged commit pushes on master
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}

  release:
    runs-on: ubuntu-latest
    needs: [pytest-coverage, citation]
    name: Release on GitHub
    steps:
      - uses: actions/checkout@v2
      - name: Create incremental changelog
        run: >
          cat CHANGELOG.md 
          | sed -n '1,/github/p' 
          > RELEASE_CHANGELOG.md

      - name: Echo RELEASE_CHANGELOG.md
        run: cat RELEASE_CHANGELOG.md

      - name: Publish release on GitHub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            RELEASE_CHANGELOG.md
          body_path: RELEASE_CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
